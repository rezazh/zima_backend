# Generated by Django 5.1.5 on 2025-05-16 13:09

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone_number', models.CharField(blank=True, max_length=11, null=True, unique=True, validators=[django.core.validators.RegexValidator(message='شماره موبایل باید با 09 شروع شده و 11 رقم باشد.', regex='^09\\d{9}$')], verbose_name='شماره موبایل')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('national_id', models.CharField(blank=True, max_length=10, null=True, validators=[django.core.validators.RegexValidator(message='کد ملی باید 10 رقم باشد.', regex='^\\d{10}$')], verbose_name='کد ملی')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='تاریخ تولد')),
                ('receive_sms', models.BooleanField(default=True, verbose_name='دریافت پیامک')),
                ('receive_email', models.BooleanField(default=True, verbose_name='دریافت ایمیل')),
                ('date_modified', models.DateTimeField(auto_now=True, verbose_name='تاریخ آخرین بروزرسانی')),
                ('last_visit', models.DateTimeField(blank=True, null=True, verbose_name='آخرین بازدید')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'کاربر',
                'verbose_name_plural': 'کاربران',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='مثال: خانه، محل کار و...', max_length=100, verbose_name='عنوان آدرس')),
                ('receiver_full_name', models.CharField(max_length=150, verbose_name='نام و نام خانوادگی گیرنده')),
                ('receiver_phone', models.CharField(max_length=11, validators=[django.core.validators.RegexValidator(message='شماره موبایل باید با 09 شروع شده و 11 رقم باشد.', regex='^09\\d{9}$')], verbose_name='شماره موبایل گیرنده')),
                ('province', models.CharField(choices=[('تهران', 'تهران'), ('اصفهان', 'اصفهان'), ('فارس', 'فارس'), ('خراسان رضوی', 'خراسان رضوی'), ('آذربایجان شرقی', 'آذربایجان شرقی'), ('آذربایجان غربی', 'آذربایجان غربی'), ('کرمان', 'کرمان'), ('خوزستان', 'خوزستان'), ('هرمزگان', 'هرمزگان'), ('سیستان و بلوچستان', 'سیستان و بلوچستان'), ('کردستان', 'کردستان'), ('همدان', 'همدان'), ('کرمانشاه', 'کرمانشاه'), ('گیلان', 'گیلان'), ('مازندران', 'مازندران'), ('زنجان', 'زنجان'), ('گلستان', 'گلستان'), ('اردبیل', 'اردبیل'), ('قزوین', 'قزوین'), ('لرستان', 'لرستان'), ('بوشهر', 'بوشهر'), ('کهگیلویه و بویراحمد', 'کهگیلویه و بویراحمد'), ('مرکزی', 'مرکزی'), ('ایلام', 'ایلام'), ('چهارمحال و بختیاری', 'چهارمحال و بختیاری'), ('یزد', 'یزد'), ('قم', 'قم'), ('سمنان', 'سمنان'), ('البرز', 'البرز'), ('خراسان شمالی', 'خراسان شمالی'), ('خراسان جنوبی', 'خراسان جنوبی')], max_length=50, verbose_name='استان')),
                ('city', models.CharField(max_length=50, verbose_name='شهر')),
                ('postal_code', models.CharField(max_length=10, validators=[django.core.validators.RegexValidator(message='کد پستی باید 10 رقم باشد.', regex='^\\d{10}$')], verbose_name='کد پستی')),
                ('full_address', models.TextField(verbose_name='آدرس کامل')),
                ('is_default', models.BooleanField(default=False, verbose_name='آدرس پیش\u200cفرض')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاریخ ایجاد')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاریخ بروزرسانی')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='addresses', to=settings.AUTH_USER_MODEL, verbose_name='کاربر')),
            ],
            options={
                'verbose_name': 'آدرس',
                'verbose_name_plural': 'آدرس\u200cها',
                'ordering': ['-is_default', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Newsletter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='ایمیل')),
                ('is_active', models.BooleanField(default=True, verbose_name='فعال')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاریخ عضویت')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='newsletters', to=settings.AUTH_USER_MODEL, verbose_name='کاربر')),
            ],
            options={
                'verbose_name': 'خبرنامه',
                'verbose_name_plural': 'خبرنامه\u200cها',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('activity_type', models.CharField(choices=[('login', 'ورود به سیستم'), ('logout', 'خروج از سیستم'), ('register', 'ثبت\u200cنام'), ('profile_update', 'بروزرسانی پروفایل'), ('password_change', 'تغییر رمز عبور'), ('order_placed', 'ثبت سفارش'), ('review_added', 'ثبت نظر')], max_length=20, verbose_name='نوع فعالیت')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='آدرس IP')),
                ('user_agent', models.TextField(blank=True, null=True, verbose_name='مرورگر کاربر')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='زمان فعالیت')),
                ('details', models.JSONField(blank=True, null=True, verbose_name='جزئیات')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to=settings.AUTH_USER_MODEL, verbose_name='کاربر')),
            ],
            options={
                'verbose_name': 'فعالیت کاربر',
                'verbose_name_plural': 'فعالیت\u200cهای کاربران',
                'ordering': ['-timestamp'],
            },
        ),
    ]
