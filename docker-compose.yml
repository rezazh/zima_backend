services:
  postgres:
    image: postgres:15-alpine
    container_name: zima_postgres
    environment:
      POSTGRES_DB: ${DB_NAME:-zima}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-rezazh79}
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    networks:
      - zima_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres} -d ${DB_NAME:-zima}"]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: zima_redis
    networks:
      - zima_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: unless-stopped

  django:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: zima_django
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - .env.production
    environment:
      - DB_HOST=postgres
      - REDIS_HOST=redis
      - DJANGO_ENV=development
      - SERVICE_TYPE=django
      - USE_FILE_LOGGING=false
    volumes:
      - .:/app
      - static_volume:/app/staticfiles  # تغییر از مسیر محلی به volume
      - media_volume:/app/media
    networks:
      - zima_network
    restart: unless-stopped
    ports:
      - "8002:8000"

  gunicorn:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: zima_gunicorn
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - .env.production
    environment:
      - DB_HOST=postgres
      - REDIS_HOST=redis
      - DJANGO_ENV=production
      - SERVICE_TYPE=gunicorn
      - USE_FILE_LOGGING=false
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    networks:
      - zima_network
    restart: unless-stopped
    expose:
      - "8000"

  daphne:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: zima_daphne
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    env_file:
      - .env.production
    environment:
      - DB_HOST=postgres
      - REDIS_HOST=redis
      - DJANGO_ENV=production
      - SERVICE_TYPE=daphne
      - USE_FILE_LOGGING=false
    volumes:
      - .:/app
      - static_volume:/app/staticfiles  # استفاده از volume
      - media_volume:/app/media
    networks:
      - zima_network
    restart: unless-stopped
    ports:
      - "8001:8001"

  nginx:
    image: nginx:alpine
    container_name: zima_nginx
    depends_on:
      - gunicorn
      - daphne
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./config/nginx.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/app/staticfiles:ro  # استفاده از volume
      - media_volume:/app/media:ro
    networks:
      - zima_network
    restart: unless-stopped

volumes:
  postgres_data:
    name: zima_postgres_data
  static_volume:    # volume جدید برای static files
    name: zima_static
  media_volume:     # volume جدید برای media files
    name: zima_media
networks:
  zima_network:
    name: zima_network