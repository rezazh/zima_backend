version: '3.8'

services:
  web:
    build: .
    restart: always
    depends_on:
      - postgres
    env_file:
      - .env
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    networks:
      - zima_network

  postgres:
    image: postgres:14
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    networks:
      - zima_network

  nginx:
    image: nginx:1.25
    restart: always
    depends_on:
      - web
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
      - static_volume:/var/www/html/static
      - media_volume:/var/www/html/media
      - certbot_data:/var/www/certbot
    networks:
      - zima_network

  certbot:
    image: certbot/certbot
    volumes:
      - certbot_data:/var/www/certbot
      - ./nginx/ssl:/etc/letsencrypt
    command: certonly --webroot --webroot-path=/var/www/certbot --email your-email@example.com --agree-tos --no-eff-email -d yourdomain.com -d www.yourdomain.com

volumes:
  postgres_data:
  static_volume:
  media_volume:
  certbot_data:

networks:
  zima_network:
    driver: bridgemkdir -p nginx/conf.d