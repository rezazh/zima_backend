name: Deploy to Production

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 45  # کاهش timeout

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 1

    - name: Deploy to server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        command_timeout: 30m  # کاهش timeout
        script: |
          #!/bin/bash
          set -e
          
          echo "===== Starting deployment process at $(date) ====="
          
          # تنظیم متغیرهای محیطی
          export COMPOSE_HTTP_TIMEOUT=180
          export DOCKER_CLIENT_TIMEOUT=180
          export DOCKER_BUILDKIT=1
          export COMPOSE_DOCKER_CLI_BUILD=1
          
          # تابع retry ساده‌تر
          function retry {
            local retries=$1
            local wait_time=$2
            shift 2
            local count=0
            until "$@"; do
              exit_status=$?
              count=$((count + 1))
              if [ $count -lt $retries ]; then
                echo "Retry $count/$retries failed. Waiting ${wait_time}s..."
                sleep $wait_time
              else
                echo "All $retries attempts failed."
                return $exit_status
              fi
            done
            return 0
          }
          
          # مرحله 1: آماده‌سازی
          echo "===== Stage 1: Preparing ====="
          cd /var/www/zimabestshop/zima_backend || exit 1
          git reset --hard
          git clean -fd
          
          # مرحله 2: دریافت تغییرات
          echo "===== Stage 2: Pulling changes ====="
          retry 3 10 git pull --ff-only origin main
          
          # مرحله 3: توقف سریع کانتینرها
          echo "===== Stage 3: Quick stop ====="
          docker-compose down --timeout 30 || echo "Stop failed, continuing..."
          
          # مرحله 4: پاکسازی (اختیاری)
          echo "===== Stage 4: Optional cleanup ====="
          if docker-compose --profile cleanup ps db-cleanup &>/dev/null; then
            docker-compose --profile cleanup up db-cleanup || echo "Cleanup skipped"
          else
            echo "No cleanup service defined, skipping..."
          fi
          
          # مرحله 5: بیلد سریع‌تر
          echo "===== Stage 5: Fast build ====="
          # فقط اگر Dockerfile تغییر کرده باشد rebuild کن
          if git diff HEAD~1 --name-only | grep -E "(Dockerfile|requirements.txt)" > /dev/null; then
            echo "Dependencies changed, rebuilding..."
            docker-compose build --parallel
          else
            echo "No dependency changes, using cached images..."
          fi
          
          # مرحله 6: راه‌اندازی
          echo "===== Stage 6: Starting services ====="
          docker-compose up -d --wait --timeout 120
          
          # مرحله 7: بررسی سریع
          echo "===== Stage 7: Quick health check ====="
          sleep 10
          docker-compose ps
          
          # بررسی لاگ‌های خطا
          if docker-compose logs --tail=5 | grep -i "error\|failed" > /dev/null; then
            echo "⚠️  Some errors detected in logs:"
            docker-compose logs --tail=5 | grep -i "error\|failed"
          else
            echo "✅ No immediate errors found"
          fi
          
          echo "===== Deployment completed at $(date) ====="